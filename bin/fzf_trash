# F Z F  T R A S H 

function fzf_trash() {
  if [[ "$#" -eq 0 ]]; then
    files=$(exa -a --icons --color=always | fzf --ansi --cycle --multi --preview 'bat --style=header,grid --line-range :300 --color=always {2}' )
    split_arr=()
    
    while read -r line; do
      split_arr+=("$line")
    done <<< "$files"

    # echo ${!split_arr[@]}
    
    [[ $files ]] && : || exit 0

    for val in ${!split_arr[@]}; do
      
      printf "Remove ${split_arr[val]}? [y/n]\n"
      read decision
      decision=$(echo $decision |  awk '{print tolower($0)}')
      if [[ $decision =~ ^([y]|yes)?$ ]]; then
        RM_FILE=$(echo ${split_arr[val]} | awk '{$1=""; print $0}' | sed -E "s/(.*)( ->.*)/\1/")
        RM_FILE=$(printf "%q" "$(pwd)/${RM_FILE:1}")
        echo $RM_FILE
        echo $RM_FILE | xargs  -I % trash -v "%"
      elif [[ $decision =~ ^([n]|no)?$ ]]; then
        :
      else
        while [[ ! ${decision} =~ ^([yn]|yes|no)?$ ]]; do
          read -r -p "Enter a yes/no value: " decision
        done
      fi
    done
  
  else
    trash "$@"
  fi
}

fzf_trash $@
