<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array/>
	<key>firstLineMatch</key>
	<string>^%YAML( ?1.\d+)?</string>
	<key>keyEquivalent</key>
	<string>^~Y</string>
	<key>name</key>
	<string>Ansible (advanced)</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#comment</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#property</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#directive</string>
		</dict>
		<dict>
			<key>match</key>
			<string>^---</string>
			<key>name</key>
			<string>entity.other.document.begin.ansible-advanced</string>
		</dict>
		<dict>
			<key>match</key>
			<string>^\.{3}</string>
			<key>name</key>
			<string>entity.other.document.end.ansible-advanced</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#conditions</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#node</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>block-collection</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#block-sequence</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#block-mapping</string>
				</dict>
			</array>
		</dict>
		<key>block-mapping</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#block-pair</string>
				</dict>
			</array>
		</dict>
		<key>block-node</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#prototype</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#block-scalar</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#block-collection</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#flow-scalar-plain-out</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#flow-node</string>
				</dict>
			</array>
		</dict>
		<key>block-pair</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\?</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.key-value.begin.ansible-advanced</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=\?)|^ *(:)|(:)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.key-value.mapping.ansible-advanced</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.expected-newline.ansible-advanced</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.block-mapping.ansible-advanced</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#block-node</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?x)
                    (?=
                    (?x:
                        [^\s[-?:,\[\]{}#&gt;*!|&amp;'"%@`]]
                        | [?:-] \S
                    )
                    (
                        [^\s:]
                        | : \S
                        | \s+ (?![#\s])
                    )*
                    \s*
                    :
                    (\s|$)
                    )
                    </string>
					<key>end</key>
                    <string>(?x)
                    (?=
                        \s* $
                    | \s+ \#
                    | \s* : (\s|$)
                    )
                    </string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#flow-scalar-plain-out-implicit-type</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?x)
                                [^\s[-?:,\[\]{}#&amp;*!|&gt;'"%@`]]
                                | [?:-] (?=\S)</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>keyword.other.ansible-advanced</string>
								</dict>
							</dict>
							<key>contentName</key>
							<string>keyword.other.ansible-advanced</string>
							<key>end</key>
							<string>(?x)
                            (?=
                                    \s* $
                                | \s+ \#
                                | \s* : (\s|$)
                            )
                            </string>
							<key>name</key>
							<string>string.unquoted.plain.out.ansible-advanced</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>:(?=\s|$)</string>
					<key>name</key>
					<string>punctuation.separator.key-value.mapping.ansible-advanced</string>
				</dict>
			</array>
		</dict>
		<key>block-scalar</key>
		<dict>
			<key>begin</key>
			<string>(\s*)(?:(?:-\s+)?(\S+):\s+|-\s+)(?:(\|)|(&gt;))([1-9])?([-+])?(.*\n?)</string>
			<key>beginCaptures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.ansible-advanced</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.block.scalar.literal.ansible-advanced</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.block.scalar.folded.ansible-advanced</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.indentation-indicator.ansible-advanced</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>support.other.chomping-indicator.ansible-advanced</string>
				</dict>
				<key>7</key>
				<dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
						<dict>
							<key>match</key>
							<string>.+</string>
							<key>name</key>
							<string>invalid.illegal.expected-comment-or-newline.ansible-advanced</string>
						</dict>
					</array>
				</dict>
			</dict>
			<key>contentName</key>
			<string>string.unquoted.block.ansible-advanced</string>
			<key>end</key>
			<string>^(?!\1\s+\S|$)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#specials</string>
				</dict>
			</array>
		</dict>
		<key>block-sequence</key>
		<dict>
			<key>match</key>
			<string>(-)( |\t|$)</string>
			<key>name</key>
			<string>punctuation.definition.block.sequence.item.ansible-advanced</string>
		</dict>
		<key>comment</key>
		<dict>
			<key>begin</key>
			<string>(?:(^[ \t]*)|[ \t]+)(?=#\p{Print}*$)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.whitespace.comment.leading.ansible-advanced</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?!\G)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>#</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.ansible-advanced</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\n</string>
					<key>name</key>
					<string>comment.line.number-sign.ansible-advanced</string>
				</dict>
			</array>
		</dict>
		<key>conditions</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\b((?:changed_|failed_)?when|check_mode)\b\s*:(?! [|&gt;]|\s*$)(\s+["'])?</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.special-method.ansible-advanced</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?:["'])?$</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.jinja#expression</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\s*)(?:(?:-\s+)?((?:changed_|failed_)?when|check_mode):\s+|-\s+)(?:(\|)|(&gt;))([1-9])?([-+])?(.*\n?)</string>
					<key>beginCaptures</key>
					<dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.other.special-method.ansible-advanced</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.block.scalar.literal.ansible-advanced</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.block.scalar.folded.ansible-advanced</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.indentation-indicator.ansible-advanced</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>support.other.chomping-indicator.ansible-advanced</string>
						</dict>
						<key>7</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#comment</string>
								</dict>
								<dict>
									<key>match</key>
									<string>.+</string>
									<key>name</key>
									<string>invalid.illegal.expected-comment-or-newline.ansible-advanced</string>
								</dict>
							</array>
						</dict>
					</dict>
					<key>contentName</key>
					<string>string.unquoted.block.ansible-advanced</string>
					<key>end</key>
					<string>^(?!\1\s+\S|$)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.jinja#expression</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>^(\s*)(?:(?:-\s+)?((?:changed_|failed_)?when|check_mode)):$</string>
					<key>beginCaptures</key>
					<dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.other.special-method.ansible-advanced</string>
						</dict>
					</dict>
					<key>end</key>
					<string>^(?!\1\s+-\s+\S|$)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(?:["'])(.*)(?=["']\s*?$)</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>source.jinja#expression</string>
										</dict>
									</array>
								</dict>
							</dict>
							<key>end</key>
							<string>$</string>
						</dict>
						<dict>
							<key>include</key>
							<string>source.jinja#expression</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>directive</key>
		<dict>
			<key>begin</key>
			<string>^%</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.directive.begin.ansible-advanced</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?=$|[ \t]+($|#))</string>
			<key>name</key>
			<string>meta.directive.ansible-advanced</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.directive.ansible-advanced.ansible-advanced</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.ansible-advanced-version.ansible-advanced</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\G(YAML)[ \t]+(\d+\.\d+)</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.directive.tag.ansible-advanced</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.type.tag-handle.ansible-advanced</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>support.type.tag-prefix.ansible-advanced</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?x) \G (TAG) (?:[ \t]+
                        ((?:!(?:[0-9A-Za-z\-]*!)?))
                        (?:[ \t]+ (
                            !              (?x: %\p{XDigit}{2} | [0-9A-Za-z\-#;/?:@&amp;=+$,_.!~*'()\[\]] )*
                            | (?![,!\[\]{}]) (?x: %\p{XDigit}{2} | [0-9A-Za-z\-#;/?:@&amp;=+$,_.!~*'()\[\]] )+
                            )
                        )?
                    )?
                    </string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.other.directive.reserved.ansible-advanced</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>string.unquoted.directive-name.ansible-advanced</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>string.unquoted.directive-parameter.ansible-advanced</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?x) \G (\w+) (?:[ \t]+ (\w+) (?:[ \t]+ (\w+))? )?</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\S+</string>
					<key>name</key>
					<string>invalid.illegal.unrecognized.ansible-advanced</string>
				</dict>
			</array>
		</dict>
		<key>flow-alias</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.flow.alias.ansible-advanced</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.alias.ansible-advanced</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>keyword.other.alias.ansible-advanced</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.character.anchor.ansible-advanced</string>
				</dict>
			</dict>
			<key>match</key>
			<string>((\*))([^\s\[\]/{/},]+)([^\s\]},]\S*)?</string>
		</dict>
		<key>flow-collection</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#flow-sequence</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#flow-mapping</string>
				</dict>
			</array>
		</dict>
		<key>flow-mapping</key>
		<dict>
			<key>begin</key>
			<string>\{</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.mapping.begin.ansible-advanced</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\}</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.mapping.end.ansible-advanced</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.flow-mapping.ansible-advanced</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#prototype</string>
				</dict>
				<dict>
					<key>match</key>
					<string>,</string>
					<key>name</key>
					<string>punctuation.separator.mapping.ansible-advanced</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#flow-pair</string>
				</dict>
			</array>
		</dict>
		<key>flow-node</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#prototype</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#flow-alias</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#flow-collection</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#flow-scalar</string>
				</dict>
			</array>
		</dict>
		<key>flow-pair</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\?</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.key-value.begin.ansible-advanced</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=[},\]])</string>
					<key>name</key>
					<string>meta.flow-pair.explicit.ansible-advanced</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#prototype</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#flow-pair</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#flow-node</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>:(?=\s|$|[\[\]{},])</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.separator.key-value.mapping.ansible-advanced</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?=[},\]])</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#flow-value</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?x)
                    (?=
                    (?x:
                            [^\s[-?:,\[\]{}#&amp;*!|&gt;'"%@`]]
                        | [?:-] \S
                    )
                    (
                            [^\s:]
                        | : \S
                        | \s+ (?![#\s])
                    )*
                    \s*
                    :
                    (\s|$)
                    )</string>
					<key>end</key>
					<string>(?x)
                    (?=
                        \s* $
                        | \s+ \#
                        | \s* : (\s|$)
                    )</string>
					<key>name</key>
					<string>meta.flow-pair.key.ansible-advanced</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#flow-scalar-plain-in-implicit-type</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?x)
                            [^\s[-?:,\[\]{}#&amp;*!|&gt;'"%@`]]
                            | [?:-] [^\s[\[\]{},]]
                            </string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>keyword.other.ansible-advanced</string>
								</dict>
							</dict>
							<key>contentName</key>
							<string>keyword.other.ansible-advanced</string>
							<key>end</key>
							<string>(?x) 
                                (?=
                                    \s* $
                                    | \s+ \#
                                    | \s* : (\s|$)
                                    | \s* : [\[\]{},]
                                    | \s* [\[\]{},]
                                )
                            </string>
							<key>name</key>
							<string>string.unquoted.plain.in.ansible-advanced</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#flow-node</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>:(?=\s|$|[\[\]{},])</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.key-value.mapping.ansible-advanced</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=[},\]])</string>
					<key>name</key>
					<string>meta.flow-pair.ansible-advanced</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#flow-value</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>flow-scalar</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#flow-scalar-double-quoted</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#flow-scalar-single-quoted</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#flow-scalar-plain-in</string>
				</dict>
			</array>
		</dict>
		<key>flow-scalar-double-quoted</key>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.ansible-advanced</string>
				</dict>
			</dict>
			<key>end</key>
			<string>"</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.ansible-advanced</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.ansible-advanced</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\([0abtnvfre "/\\N_Lp]|x\d\d|u\d{4}|U\d{8})</string>
					<key>name</key>
					<string>constant.character.escape.ansible-advanced</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\\n</string>
					<key>name</key>
					<string>constant.character.escape.double-quoted.newline.ansible-advanced</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#specials</string>
				</dict>
			</array>
		</dict>
		<key>flow-scalar-plain-in</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#flow-scalar-plain-in-implicit-type</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?x)
                        [^\s[-?:,\[\]{}#&amp;*!|&gt;'"%@`]]
                        | [?:-] [^\s[\[\]{},]]</string>
                                            <key>end</key>
                                            <string>(?x)
                        (?=
                            \s* $
                        | \s+ \#
                        | \s* : (\s|$)
                        | \s* : [\[\]{},]
                        | \s* [\[\]{},]
                    )
                    </string>
					<key>name</key>
					<string>string.unquoted.plain.in.ansible-advanced</string>
				</dict>
			</array>
		</dict>
		<key>flow-scalar-plain-in-implicit-type</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.language.null.ansible-advanced</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>constant.language.boolean.ansible-advanced</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.integer.ansible-advanced</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.float.ansible-advanced</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>constant.other.timestamp.ansible-advanced</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>constant.language.value.ansible-advanced</string>
						</dict>
						<key>7</key>
						<dict>
							<key>name</key>
							<string>constant.language.merge.ansible-advanced</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?x)
                        (?x:
                            (null|Null|NULL|~)
                        | (y|Y|yes|Yes|YES|n|N|no|No|NO|true|True|TRUE|false|False|FALSE|on|On|ON|off|Off|OFF)
                        | (
                            (?:
                                [-+]? 0b [0-1_]+ # (base 2)
                                | [-+]? 0  [0-7_]+ # (base 8)
                                | [-+]? (?: 0|[1-9][0-9_]*) # (base 10)
                                | [-+]? 0x [0-9a-fA-F_]+ # (base 16)
                                | [-+]? [1-9] [0-9_]* (?: :[0-5]?[0-9])+ # (base 60)
                            )
                            )
                        | (
                            (?x:
                                [-+]? (?: [0-9] [0-9_]*)? \. [0-9.]* (?: [eE] [-+] [0-9]+)? # (base 10)
                                | [-+]? [0-9] [0-9_]* (?: :[0-5]?[0-9])+ \. [0-9_]* # (base 60)
                                | [-+]? \. (?: inf|Inf|INF) # (infinity)
                                |       \. (?: nan|NaN|NAN) # (not a number)
                            )
                            )
                        | (
                            (?x:
                                \d{4} - \d{2} - \d{2}           # (y-m-d)
                                | \d{4}                           # (year)
                                - \d{1,2}                       # (month)
                                - \d{1,2}                       # (day)
                                (?: [Tt] | [ \t]+) \d{1,2}      # (hour)
                                : \d{2}                         # (minute)
                                : \d{2}                         # (second)
                                (?: \.\d*)?                     # (fraction)
                                (?:
                                        (?:[ \t]*) Z
                                    | [-+] \d{1,2} (?: :\d{1,2})?
                                )?                              # (time zone)
                            )
                            )
                        | (=)
                        | (&lt;&lt;)
                        )
                        (?:
                            (?=
                                \s* $
                                | \s+ \#
                                | \s* : (\s|$)
                                | \s* : [\[\]{},]
                                | \s* [\[\]{},]
                            )
                        )
                    </string>
				</dict>
			</array>
		</dict>
		<key>flow-scalar-plain-out</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#flow-scalar-plain-out-implicit-type</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?x)
                        (?=[^\s[-?:,\[\]{}#&amp;*!|&gt;'"%@`]])
                        | [?:-] (?=\S)
                    </string>
					<key>end</key>
					<string>(?x)
                        (?=
                            \s* $
                            | \s+ \#
                            | \s* : (\s|$)
                        )
                    </string>
					<key>name</key>
					<string>string.unquoted.plain.out.ansible-advanced</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#specials</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>flow-scalar-plain-out-implicit-type</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.language.null.ansible-advanced</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>constant.language.boolean.ansible-advanced</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.integer.ansible-advanced</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.float.ansible-advanced</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>constant.other.timestamp.ansible-advanced</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>constant.language.value.ansible-advanced</string>
						</dict>
						<key>7</key>
						<dict>
							<key>name</key>
							<string>constant.language.merge.ansible-advanced</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?x)
                        (?x:
                            (null|Null|NULL|~)
                            | (y|Y|yes|Yes|YES|n|N|no|No|NO|true|True|TRUE|false|False|FALSE|on|On|ON|off|Off|OFF)
                            | (
                                (?:
                                    [-+]? 0b [0-1_]+ # (base 2)
                                    | [-+]? 0  [0-7_]+ # (base 8)
                                    | [-+]? (?: 0|[1-9][0-9_]*) # (base 10)
                                    | [-+]? 0x [0-9a-fA-F_]+ # (base 16)
                                    | [-+]? [1-9] [0-9_]* (?: :[0-5]?[0-9])+ # (base 60)
                                )
                            )
                            | (
                                (?x:
                                    [-+]? (?: [0-9] [0-9_]*)? \. [0-9.]* (?: [eE] [-+] [0-9]+)? # (base 10)
                                    | [-+]? [0-9] [0-9_]* (?: :[0-5]?[0-9])+ \. [0-9_]* # (base 60)
                                    | [-+]? \. (?: inf|Inf|INF) # (infinity)
                                    |       \. (?: nan|NaN|NAN) # (not a number)
                                )
                            )
                            | (
                                (?x:
                                    \d{4} - \d{2} - \d{2}           # (y-m-d)
                                | \d{4}                           # (year)
                                    - \d{1,2}                       # (month)
                                    - \d{1,2}                       # (day)
                                    (?: [Tt] | [ \t]+) \d{1,2}      # (hour)
                                    : \d{2}                         # (minute)
                                    : \d{2}                         # (second)
                                    (?: \.\d*)?                     # (fraction)
                                    (?:
                                        (?:[ \t]*) Z
                                        | [-+] \d{1,2} (?: :\d{1,2})?
                                    )?                              # (time zone)
                                )
                            )
                            | (=)
                            | (&lt;&lt;)
                        )
                        (?x:
                            (?=
                                \s* $
                                | \s+ \#
                                | \s* : (\s|$)
                            )
                        )
                    </string>
				</dict>
			</array>
		</dict>
		<key>flow-scalar-single-quoted</key>
		<dict>
			<key>begin</key>
			<string>'</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.ansible-advanced</string>
				</dict>
			</dict>
			<key>end</key>
			<string>'(?!')</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.ansible-advanced</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.single.ansible-advanced</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>''</string>
					<key>name</key>
					<string>constant.character.escape.single-quoted.ansible-advanced</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#specials</string>
				</dict>
			</array>
		</dict>
		<key>flow-sequence</key>
		<dict>
			<key>begin</key>
			<string>\[</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.sequence.begin.ansible-advanced</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\]</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.sequence.end.ansible-advanced</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.flow-sequence.ansible-advanced</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#prototype</string>
				</dict>
				<dict>
					<key>match</key>
					<string>,</string>
					<key>name</key>
					<string>punctuation.separator.sequence.ansible-advanced</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#flow-pair</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#flow-node</string>
				</dict>
			</array>
		</dict>
		<key>flow-value</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\G(?![},\]])</string>
					<key>end</key>
					<string>(?=[},\]])</string>
					<key>name</key>
					<string>meta.flow-pair.value.ansible-advanced</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#flow-node</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>node</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#block-node</string>
				</dict>
			</array>
		</dict>
		<key>property</key>
		<dict>
			<key>begin</key>
			<string>(?=!|&amp;)</string>
			<key>end</key>
			<string>(?!\G)</string>
			<key>name</key>
			<string>meta.property.ansible-advanced</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.property.anchor.ansible-advanced</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.anchor.ansible-advanced</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.anchor.ansible-advanced</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.character.anchor.ansible-advanced</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\G((&amp;))([^\s\[\]/{/},]+)(\S+)?</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?x) \G (?:
                        ! &lt; (?: %\p{XDigit}{2} | [0-9A-Za-z\-#;/?:@&amp;=+$,_.!~*'()\[\]] )+ &gt;
                        | (?:!(?:[0-9A-Za-z\-]*!)?) (?: %\p{XDigit}{2} | [0-9A-Za-z\-#;/?:@&amp;=+$_.~*'()] )+
                        | !
                        ) (?=\ |\t|$)
                    </string>
					<key>name</key>
					<string>storage.type.tag-handle.ansible-advanced</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\S+</string>
					<key>name</key>
					<string>invalid.illegal.tag-handle.ansible-advanced</string>
				</dict>
			</array>
		</dict>
		<key>prototype</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#property</string>
				</dict>
			</array>
		</dict>
		<key>specials</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.jinja</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.other.attribute-name.ansible-advanced-advence</string>
						</dict>
					</dict>
					<key>match</key>
					<string>([\w-]+?)=</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.ansible-advanced</string>
	<key>uuid</key>
	<string>99ac36b1-d3e8-44f3-9933-3d36a95e87ff</string>
</dict>
</plist>
